###
### This file is managed by Puppet.
###

storm.zookeeper.servers:
<% for @zkserver in @zookeeper_servers -%>
  - <%= @zkserver %>
<% end -%>

nimbus.host: "<%= @nimbus_host %>"

<% if !@drpc_servers.empty? -%>
drpc.servers:
<% for @drpcserver in @drpc_servers -%>
  - <%= @drpcserver %>
<% end -%>
<% end -%>

storm.local.dir: "<%= @local_dir %>"
storm.local.hostname: "<%= @local_hostname %>"

drpc.childopts: "<%= @drpc_childopts %>"
logviewer.childopts: "<%= @logviewer_childopts %>"
nimbus.childopts: "<%= @nimbus_childopts %>"
ui.childopts: "<%= @ui_childopts %>"
supervisor.childopts: "<%= @supervisor_childopts %>"
worker.childopts: "<%= @worker_childopts %>"

# Define the amount of workers that can be run on this machine.
# Each worker is assigned a port to use for communication.
supervisor.slots.ports:
<% @supervisor_slots_ports.each do |port| -%>
  - <%= port %>
<% end -%>

# Messaging backend for inter-task communication
#   "backtype.storm.messaging.netty.Context" -- use Netty (default since Storm 0.9.1)
#
# Important note: The puppet-storm module intentionally does not support the legacy
#                 ZeroMQ messaging backend anymore.  If you need ZeroMQ as a backend,
#                 you must make sure yourself to deploy ZeroMQ and JZMQ to the Storm nodes.
#                 Then set `storm.messaging.transport` to "backtype.storm.messaging.zmq".
#
storm.messaging.transport: "<%= @storm_messaging_transport %>"

<%=
  require 'yaml'

  class Hash
    def to_sorted_yaml(opts = {})
      YAML::quick_emit(object_id, opts) do |out|
        out.map(taguri, to_yaml_style) do |map|
          sort.each do |k, v|
            map.add(k, v)
          end
        end
      end
    end
  end

  @config_map.to_sorted_yaml.lines.
    select { |s| s !~ /^[-]{3}/ }.
    map { |s| s.sub(/^  /, '').rstrip }.
    join("\n")

  # Due to a Puppet/rspec-puppet bug we unfortunately cannot put the hash-to-YAML-fragment conversion into a custom
  # Puppet function under lib/puppet/parser/functions/, and unit test that function in isolation.  The problem is that
  # as soon as we create a lib/ folder running rspec-puppet via e.g. `rake test` will fail, complaining about not
  # finding e.g. `validate_absolute_path` of puppetlabs/stdlib.  It looks as if this bug only affects Puppet 3.0.x.
-%>
